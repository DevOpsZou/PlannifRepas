
# This mannifest allow :
# 1. building and pushing services/db images on docker registry
name: kubernete deploiement
on:
  push:
    branches: [ feat/microServicesApp ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: recuperation du repo
      uses: actions/checkout@main
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Build and push image service login
      uses: docker/build-push-action@v2
      with:
        file: loginFlask/Dockerfile
        push: true
        tags: zafoutni/login:1.0.0
    - name: Build and push image service random meal
      uses: docker/build-push-action@v2
      with:
        file: randomPlanMeal_SQLAlchemy/Dockerfile
        push: true
        tags: zafoutni/randomplan:1.0.0
    - name: Build and push image database
      uses: docker/build-push-action@v2
      with:
        file: randomPlanMeal_SQLAlchemy/Dockerfile
        push: true
        tags: zafoutni/database:1.0.0
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }} 
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-pull
    steps:
    - uses: actions/checkout@main
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    - name: "Configuration et connection a AKS"
      uses: azure/aks-set-context@v1
      with:

        creds: ${{ secrets.AZURE_CREDENTIALS }}
        cluster-name: product-aks1
        resource-group: product-resources
    - run : |
         
          # kubectl apply -f   kubernetes/controller_ingress.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/deployement_db.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/deployement_login.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/deployement_random.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/secret.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/service_login.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/service_random.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/ingress.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/service_db.yaml --namespace ingress-nginx
          # kubectl apply -f   kubernetes/pvc_dbrecette.yaml --namespace ingress-nginx
    
    ## Pense Ã  quand est ce que tu lances cert_manager....
    # - uses: azure/k8s-deploy@v1
    #   with:
    #     manifests: |
    #       kubernetes/deployement_db.yaml
            # kubernetes/deployement_login.yaml
            # kubernetes/deployement_random.yaml
            # kubernetes/secret.yaml
            # kubernetes/service_login.yam
            # kubernetes/service_random.yaml
            # kubernetes/ingress_https.yaml
            # kubernetes/service_db.yaml
            # kubernetes/pvc_dbrecette.yaml      
